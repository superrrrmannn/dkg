do
	local v0 = tonumber;
	local v1 = string.byte;
	local v2 = string.char;
	local v3 = string.sub;
	local v4 = string.gsub;
	local v5 = string.rep;
	local v6 = table.concat;
	local v7 = table.insert;
	local v8 = math.ldexp;
	local v9 = getfenv or function()
		return _ENV;
	end;
	local v10 = setmetatable;
	local v11 = pcall;
	local v12 = select;
	local v13 = unpack or table.unpack;
	local v14 = tonumber;
	local function v15(v16, v17, ...)
		local v18 = 1;
		local v19;
		v16 = v4(v3(v16, 5), "..", function(v30)
			if (v1(v30, 2) == 79) then
				v19 = v0(v3(v30, 1, 1));
				return "";
			else
				local v70 = v2(v0(v30, 16));
				if v19 then
					local v80 = 0;
					local v81;
					while true do
						if (v80 == 1) then
							return v81;
						end
						if (v80 == 0) then
							v81 = v5(v70, v19);
							v19 = nil;
							v80 = 1;
						end
					end
				else
					return v70;
				end
			end
		end);
		local function v20(v31, v32, v33)
			if v33 then
				local v71 = (v31 / ((5 - 3) ^ (v32 - (2 - (878 - (282 + 595)))))) % ((3 - 1) ^ (((v33 - (2 - 1)) - (v32 - (620 - (555 + (1701 - (1523 + 114)))))) + (932 - (857 + 74))));
				return v71 - (v71 % 1);
			else
				local v72 = 568 - (367 + 201);
				local v73;
				while true do
					if (v72 == (927 - (214 + 713))) then
						v73 = (1 + 0 + 1) ^ (v32 - 1);
						return (((v31 % (v73 + v73)) >= v73) and (1 + (0 - 0))) or 0;
					end
				end
			end
		end
		local function v21()
			local v34 = 1065 - (68 + 997);
			local v35;
			while true do
				if (v34 == (1271 - (226 + 1044))) then
					return v35;
				end
				if (v34 == (0 - (0 + 0))) then
					v35 = v1(v16, v18, v18);
					v18 = v18 + (118 - (32 + 85));
					v34 = 1 + 0;
				end
			end
		end
		local function v22()
			local v36, v37 = v1(v16, v18, v18 + 2);
			v18 = v18 + (959 - (892 + 65));
			return (v37 * (610 - 354)) + v36;
		end
		local function v23()
			local v38 = 0 + 0;
			local v39;
			local v40;
			local v41;
			local v42;
			while true do
				if (v38 == (1 - 0)) then
					return (v42 * (30800116 - 14022900)) + (v41 * (65886 - (87 + 263))) + (v40 * 256) + v39;
				end
				if (v38 == (180 - (67 + 113))) then
					v39, v40, v41, v42 = v1(v16, v18, v18 + 3 + 0);
					v18 = v18 + 4;
					v38 = 2 - 1;
				end
			end
		end
		local function v24()
			local v43 = 0 - 0;
			local v44;
			local v45;
			local v46;
			local v47;
			local v48;
			local v49;
			while true do
				if (v43 == ((2441 - (998 + 488)) - (802 + 150))) then
					if (v48 == (0 - 0)) then
						if (v47 == (0 - 0)) then
							return v49 * 0;
						else
							local v108 = 0 + 0;
							while true do
								if (v108 == (997 - (915 + 82))) then
									v48 = 2 - 1;
									v46 = 0;
									break;
								end
							end
						end
					elseif (v48 == (1193 + 854)) then
						return ((v47 == ((0 + 0) - (0 + 0))) and (v49 * (1 / 0))) or (v49 * NaN);
					end
					return v8(v49, v48 - (2210 - ((1841 - (201 + 571)) + 118))) * (v46 + (v47 / (2 ^ (117 - 65))));
				end
				if (v43 == (3 - 1)) then
					v48 = v20(v45, 4 + 17, 31);
					v49 = ((v20(v45, 56 - 24) == 1) and -(1 + 0)) or (792 - (368 + 423));
					v43 = (1147 - (116 + 1022)) - 6;
				end
				if (v43 == (19 - ((41 - 31) + 8))) then
					v46 = 3 - 2;
					v47 = (v20(v45, 443 - (245 + 171 + 26), 20) * ((6 - 4) ^ (14 + 18))) + v44;
					v43 = 3 - 1;
				end
				if (v43 == (438 - (145 + 293))) then
					v44 = v23();
					v45 = v23();
					v43 = 431 - ((160 - 116) + 386);
				end
			end
		end
		local function v25(v50)
			local v51 = 0 - (0 - 0);
			local v52;
			local v53;
			while true do
				if (v51 == 0) then
					v52 = nil;
					if not v50 then
						local v89 = 859 - (814 + (213 - 168));
						while true do
							if (v89 == (0 - 0)) then
								v50 = v23();
								if (v50 == (0 + 0)) then
									return "";
								end
								break;
							end
						end
					end
					v51 = 1 + 0;
				end
				if (v51 == 1) then
					v52 = v3(v16, v18, (v18 + v50) - 1);
					v18 = v18 + v50;
					v51 = 887 - (261 + 624);
				end
				if (v51 == (4 - 1)) then
					return v6(v53);
				end
				if (v51 == (1082 - (1020 + 60))) then
					v53 = {};
					for v82 = 1, #v52 do
						v53[v82] = v2(v1(v3(v52, v82, v82)));
					end
					v51 = 1426 - (630 + 793);
				end
			end
		end
		local v26 = v23;
		local function v27(...)
			return {...}, v12("#", ...);
		end
		local function v28()
			local v54 = 731 - (476 + 255);
			local v55;
			local v56;
			local v57;
			local v58;
			local v59;
			local v60;
			local v61;
			local v62;
			while true do
				if ((1134 - (369 + 761)) == v54) then
					while true do
						if (v55 == (2 + 1)) then
							v62 = nil;
							while true do
								local v109 = 0 - 0;
								local v110;
								while true do
									if (v109 ~= (0 - 0)) then
									else
										v110 = 238 - (64 + 174);
										while true do
											if (v110 ~= (0 + 0)) then
											else
												local v119 = 0;
												while true do
													if (0 == v119) then
														local v123 = 0 - 0;
														while true do
															if (v123 == 0) then
																if (v56 ~= (337 - (144 + 192))) then
																else
																	local v124 = 0;
																	local v125;
																	while true do
																		if ((216 - (42 + 174)) == v124) then
																			v125 = 0;
																			while true do
																				if (v125 == (2 + 0)) then
																					v56 = 2 + 0;
																					break;
																				end
																				if (0 ~= v125) then
																				else
																					local v307 = 0;
																					while true do
																						if (1 ~= v307) then
																						else
																							v125 = 1;
																							break;
																						end
																						if (v307 ~= 0) then
																						else
																							local v355 = 0 + 0;
																							while true do
																								if ((1504 - (363 + 1141)) == v355) then
																									v61 = v23();
																									v62 = {};
																									v355 = 1581 - (1183 + 397);
																								end
																								if (v355 == (2 - 1)) then
																									v307 = 1 + 0;
																									break;
																								end
																							end
																						end
																					end
																				end
																				if (v125 == 1) then
																					local v308 = 0 + 0;
																					local v309;
																					while true do
																						if (v308 ~= (1975 - (1913 + 62))) then
																						else
																							v309 = 0;
																							while true do
																								if (v309 == (0 + 0)) then
																									for v413 = 1, v61 do
																										local v414 = 0 - 0;
																										local v415;
																										local v416;
																										local v417;
																										local v418;
																										local v419;
																										while true do
																											if (v414 == (1933 - (565 + 1368))) then
																												v415 = 0 - 0;
																												v416 = nil;
																												v414 = 1;
																											end
																											if (v414 == 1) then
																												v417 = nil;
																												v418 = nil;
																												v414 = 1663 - (1477 + 184);
																											end
																											if (v414 ~= 2) then
																											else
																												v419 = nil;
																												while true do
																													if (v415 == 2) then
																														while true do
																															if (v416 ~= 0) then
																															else
																																local v481 = 0;
																																while true do
																																	if (v481 == 0) then
																																		v417 = 0 - 0;
																																		v418 = nil;
																																		v481 = 1 + 0;
																																	end
																																	if (v481 == (857 - (564 + 292))) then
																																		v416 = 1;
																																		break;
																																	end
																																end
																															end
																															if ((1 - 0) == v416) then
																																v419 = nil;
																																while true do
																																	if (v417 == 0) then
																																		local v486 = 0;
																																		local v487;
																																		local v488;
																																		while true do
																																			if (v486 == (2 - 1)) then
																																				while true do
																																					if (v487 ~= 0) then
																																					else
																																						v488 = 0;
																																						while true do
																																							if (v488 ~= 0) then
																																							else
																																								local v501 = 304 - (244 + 60);
																																								local v502;
																																								while true do
																																									if (v501 ~= 0) then
																																									else
																																										v502 = 0;
																																										while true do
																																											if (v502 ~= (1 + 0)) then
																																											else
																																												v488 = 1;
																																												break;
																																											end
																																											if (v502 ~= (476 - (41 + 435))) then
																																											else
																																												local v514 = 1001 - (938 + 63);
																																												while true do
																																													if (v514 ~= (0 + 0)) then
																																													else
																																														v418 = v21();
																																														v419 = nil;
																																														v514 = 1;
																																													end
																																													if (v514 ~= (1126 - (936 + 189))) then
																																													else
																																														v502 = 1 + 0;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																							if (v488 == (1614 - (1565 + 48))) then
																																								v417 = 1;
																																								break;
																																							end
																																						end
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																			if (v486 == 0) then
																																				v487 = 0 + 0;
																																				v488 = nil;
																																				v486 = 1139 - (782 + 356);
																																			end
																																		end
																																	end
																																	if (v417 == 1) then
																																		if (v418 == 1) then
																																			v419 = v21() ~= 0;
																																		elseif (v418 == (269 - (176 + 91))) then
																																			v419 = v24();
																																		elseif (v418 ~= (7 - 4)) then
																																		else
																																			v419 = v25();
																																		end
																																		v62[v413] = v419;
																																		break;
																																	end
																																end
																																break;
																															end
																														end
																														break;
																													end
																													if (v415 ~= (1 - 0)) then
																													else
																														local v467 = 0;
																														while true do
																															if (v467 ~= (1093 - (975 + 117))) then
																															else
																																v415 = 2;
																																break;
																															end
																															if (v467 ~= 0) then
																															else
																																v418 = nil;
																																v419 = nil;
																																v467 = 1;
																															end
																														end
																													end
																													if (v415 ~= (1875 - (157 + 1718))) then
																													else
																														local v468 = 0 + 0;
																														while true do
																															if (v468 == (0 - 0)) then
																																v416 = 0 - 0;
																																v417 = nil;
																																v468 = 1;
																															end
																															if (v468 ~= 1) then
																															else
																																v415 = 1;
																																break;
																															end
																														end
																													end
																												end
																												break;
																											end
																										end
																									end
																									v60[3] = v21();
																									v309 = 1019 - (697 + 321);
																								end
																								if (v309 ~= 1) then
																								else
																									v125 = 5 - 3;
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																			end
																			break;
																		end
																	end
																end
																if (v56 == 2) then
																	local v126 = 0 - 0;
																	local v127;
																	while true do
																		if (v126 == (0 - 0)) then
																			v127 = 0;
																			while true do
																				local v294 = 0 + 0;
																				while true do
																					if (0 == v294) then
																						if ((0 - 0) == v127) then
																							local v356 = 0;
																							local v357;
																							while true do
																								if (v356 == 0) then
																									v357 = 0;
																									while true do
																										if (v357 ~= (0 - 0)) then
																										else
																											local v434 = 1227 - (322 + 905);
																											while true do
																												if (v434 == 0) then
																													for v469 = 612 - (602 + 9), v23() do
																														local v470 = 0;
																														local v471;
																														local v472;
																														local v473;
																														while true do
																															if ((1190 - (449 + 740)) ~= v470) then
																															else
																																v473 = nil;
																																while true do
																																	if (v471 ~= (873 - (826 + 46))) then
																																	else
																																		while true do
																																			if ((947 - (245 + 702)) ~= v472) then
																																			else
																																				v473 = v21();
																																				if (v20(v473, 1, 1) ~= (0 - 0)) then
																																				else
																																					local v491 = 0;
																																					local v492;
																																					local v493;
																																					local v494;
																																					local v495;
																																					while true do
																																						if (v491 ~= 2) then
																																						else
																																							while true do
																																								if (v492 ~= 2) then
																																								else
																																									local v503 = 0 + 0;
																																									local v504;
																																									while true do
																																										if (v503 == 0) then
																																											v504 = 1898 - (260 + 1638);
																																											while true do
																																												if (v504 ~= (441 - (382 + 58))) then
																																												else
																																													v492 = 9 - 6;
																																													break;
																																												end
																																												if (v504 ~= 0) then
																																												else
																																													local v515 = 0 + 0;
																																													while true do
																																														if (v515 ~= (0 - 0)) then
																																														else
																																															if (v20(v494, 2 - 1, 1206 - (902 + 303)) ~= (1 - 0)) then
																																															else
																																																v495[4 - 2] = v62[v495[1 + 1]];
																																															end
																																															if (v20(v494, 1692 - (1121 + 569), 216 - (22 + 192)) ~= (684 - (483 + 200))) then
																																															else
																																																v495[3] = v62[v495[1466 - (1404 + 59)]];
																																															end
																																															v515 = 2 - 1;
																																														end
																																														if (v515 == 1) then
																																															v504 = 1 - 0;
																																															break;
																																														end
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								if (v492 ~= (766 - (468 + 297))) then
																																								else
																																									local v505 = 0;
																																									local v506;
																																									local v507;
																																									while true do
																																										if (v505 == (562 - (334 + 228))) then
																																											v506 = 0 - 0;
																																											v507 = nil;
																																											v505 = 1;
																																										end
																																										if (v505 == (2 - 1)) then
																																											while true do
																																												if (v506 ~= 0) then
																																												else
																																													v507 = 0;
																																													while true do
																																														if (v507 ~= 1) then
																																														else
																																															v492 = 2;
																																															break;
																																														end
																																														if (v507 == 0) then
																																															local v518 = 0 - 0;
																																															while true do
																																																if (v518 == 0) then
																																																	v495 = {v22(),v22(),nil,nil};
																																																	if (v493 == 0) then
																																																		local v524 = 0 - 0;
																																																		local v525;
																																																		while true do
																																																			if (v524 == (0 - 0)) then
																																																				v525 = 0 + 0;
																																																				while true do
																																																					if (v525 == (0 - 0)) then
																																																						v495[3 + 0] = v22();
																																																						v495[3 + 1] = v22();
																																																						break;
																																																					end
																																																				end
																																																				break;
																																																			end
																																																		end
																																																	elseif (v493 == 1) then
																																																		v495[4 - 1] = v23();
																																																	elseif (v493 == 2) then
																																																		v495[3] = v23() - ((2 + 0) ^ 16);
																																																	elseif (v493 == 3) then
																																																		local v530 = 0;
																																																		local v531;
																																																		local v532;
																																																		while true do
																																																			if (v530 == 0) then
																																																				local v533 = 0;
																																																				while true do
																																																					if (v533 ~= (163 - (92 + 71))) then
																																																					else
																																																						v531 = 0;
																																																						v532 = nil;
																																																						v533 = 1;
																																																					end
																																																					if (v533 == 1) then
																																																						v530 = 1;
																																																						break;
																																																					end
																																																				end
																																																			end
																																																			if (v530 ~= 1) then
																																																			else
																																																				while true do
																																																					if (v531 == (0 + 0)) then
																																																						v532 = 0;
																																																						while true do
																																																							if (v532 == (0 - 0)) then
																																																								v495[768 - (574 + 191)] = v23() - ((2 + 0) ^ 16);
																																																								v495[4] = v22();
																																																								break;
																																																							end
																																																						end
																																																						break;
																																																					end
																																																				end
																																																				break;
																																																			end
																																																		end
																																																	end
																																																	v518 = 2 - 1;
																																																end
																																																if (v518 == (1 + 0)) then
																																																	v507 = 1;
																																																	break;
																																																end
																																															end
																																														end
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								if (v492 ~= (849 - (254 + 595))) then
																																								else
																																									local v508 = 0;
																																									local v509;
																																									while true do
																																										if (v508 ~= 0) then
																																										else
																																											v509 = 126 - (55 + 71);
																																											while true do
																																												if (v509 == 0) then
																																													local v516 = 0 - 0;
																																													local v517;
																																													while true do
																																														if (v516 == 0) then
																																															v517 = 0;
																																															while true do
																																																if (v517 == (1791 - (573 + 1217))) then
																																																	v509 = 2 - 1;
																																																	break;
																																																end
																																																if (0 ~= v517) then
																																																else
																																																	local v523 = 0 + 0;
																																																	while true do
																																																		if ((1 - 0) ~= v523) then
																																																		else
																																																			v517 = 940 - (714 + 225);
																																																			break;
																																																		end
																																																		if (v523 ~= (0 - 0)) then
																																																		else
																																																			v493 = v20(v473, 2 - 0, 1 + 2);
																																																			v494 = v20(v473, 5 - 1, 6);
																																																			v523 = 1;
																																																		end
																																																	end
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												if (v509 ~= 1) then
																																												else
																																													v492 = 807 - (118 + 688);
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																								if (v492 ~= (51 - (25 + 23))) then
																																								else
																																									if (v20(v494, 3, 3) ~= 1) then
																																									else
																																										v495[4] = v62[v495[4]];
																																									end
																																									v57[v469] = v495;
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v491 == (0 + 0)) then
																																							local v497 = 1886 - (927 + 959);
																																							local v498;
																																							while true do
																																								if ((0 - 0) ~= v497) then
																																								else
																																									v498 = 732 - (16 + 716);
																																									while true do
																																										if (v498 == (1 - 0)) then
																																											v491 = 98 - (11 + 86);
																																											break;
																																										end
																																										if (v498 == (0 - 0)) then
																																											local v513 = 285 - (175 + 110);
																																											while true do
																																												if (v513 ~= (2 - 1)) then
																																												else
																																													v498 = 1;
																																													break;
																																												end
																																												if ((0 - 0) == v513) then
																																													v492 = 0;
																																													v493 = nil;
																																													v513 = 1797 - (503 + 1293);
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																						if ((2 - 1) ~= v491) then
																																						else
																																							local v499 = 0;
																																							while true do
																																								if (v499 ~= (0 + 0)) then
																																								else
																																									v494 = nil;
																																									v495 = nil;
																																									v499 = 1062 - (810 + 251);
																																								end
																																								if (1 ~= v499) then
																																								else
																																									v491 = 2;
																																									break;
																																								end
																																							end
																																						end
																																					end
																																				end
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																	if (v471 == (0 + 0)) then
																																		v472 = 0 + 0;
																																		v473 = nil;
																																		v471 = 1;
																																	end
																																end
																																break;
																															end
																															if (v470 ~= (0 + 0)) then
																															else
																																v471 = 533 - (43 + 490);
																																v472 = nil;
																																v470 = 734 - (711 + 22);
																															end
																														end
																													end
																													for v474 = 1, v23() do
																														v58[v474 - (3 - 2)] = v28();
																													end
																													v434 = 1;
																												end
																												if (v434 == 1) then
																													v357 = 1;
																													break;
																												end
																											end
																										end
																										if (v357 == 1) then
																											v127 = 1;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																						if (1 == v127) then
																							local v358 = 0;
																							local v359;
																							while true do
																								if (v358 ~= 0) then
																								else
																									v359 = 0;
																									while true do
																										if (v359 ~= (859 - (240 + 619))) then
																										else
																											for v440 = 1 + 0, v23() do
																												v59[v440] = v23();
																											end
																											return v60;
																										end
																									end
																									break;
																								end
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																end
																v123 = 1;
															end
															if (v123 ~= 1) then
															else
																v119 = 1 - 0;
																break;
															end
														end
													end
													if (v119 ~= 1) then
													else
														v110 = 1 + 0;
														break;
													end
												end
											end
											if (v110 ~= 1) then
											else
												if (v56 ~= (1744 - (1344 + 400))) then
												else
													local v120 = 405 - (255 + 150);
													local v121;
													local v122;
													while true do
														if (v120 == 1) then
															while true do
																if (v121 ~= (0 + 0)) then
																else
																	v122 = 0 + 0;
																	while true do
																		if (2 == v122) then
																			v56 = 4 - 3;
																			break;
																		end
																		if (0 == v122) then
																			local v284 = 0;
																			while true do
																				if ((3 - 2) ~= v284) then
																				else
																					v122 = 1;
																					break;
																				end
																				if (v284 ~= (1739 - (404 + 1335))) then
																				else
																					v57 = {};
																					v58 = {};
																					v284 = 1;
																				end
																			end
																		end
																		if (v122 == 1) then
																			local v285 = 0;
																			local v286;
																			while true do
																				if (v285 == 0) then
																					v286 = 0;
																					while true do
																						if (v286 ~= (407 - (183 + 223))) then
																						else
																							v122 = 2 - 0;
																							break;
																						end
																						if (v286 ~= (0 + 0)) then
																						else
																							v59 = {};
																							v60 = {v57,v58,nil,v59};
																							v286 = 1;
																						end
																					end
																					break;
																				end
																			end
																		end
																	end
																	break;
																end
															end
															break;
														end
														if (v120 == (338 - (118 + 220))) then
															v121 = 0 + 0;
															v122 = nil;
															v120 = 1;
														end
													end
												end
												break;
											end
										end
										break;
									end
								end
							end
							break;
						end
						if (v55 == (450 - (108 + 341))) then
							local v100 = 0 + 0;
							local v101;
							while true do
								if (v100 == (0 - 0)) then
									v101 = 1493 - (711 + 782);
									while true do
										if (v101 == (0 - 0)) then
											local v118 = 469 - (270 + 199);
											while true do
												if (v118 ~= 0) then
												else
													v58 = nil;
													v59 = nil;
													v118 = 1 + 0;
												end
												if (v118 ~= 1) then
												else
													v101 = 1;
													break;
												end
											end
										end
										if (v101 == (1820 - (580 + 1239))) then
											v55 = 5 - 3;
											break;
										end
									end
									break;
								end
							end
						end
						if ((2 + 0) == v55) then
							local v102 = 0 + 0;
							while true do
								if (v102 == (1 + 0)) then
									v55 = 7 - 4;
									break;
								end
								if (v102 ~= 0) then
								else
									local v115 = 0;
									while true do
										if (v115 == (1 + 0)) then
											v102 = 1168 - (645 + 522);
											break;
										end
										if ((1790 - (1010 + 780)) == v115) then
											v60 = nil;
											v61 = nil;
											v115 = 1 + 0;
										end
									end
								end
							end
						end
						if ((0 - 0) ~= v55) then
						else
							local v103 = 0 - 0;
							while true do
								if ((1836 - (1045 + 791)) ~= v103) then
								else
									v56 = 0 - 0;
									v57 = nil;
									v103 = 1 - 0;
								end
								if (v103 == (506 - (351 + 154))) then
									v55 = 1;
									break;
								end
							end
						end
					end
					break;
				end
				if (v54 == 3) then
					local v74 = 0;
					while true do
						if (v74 ~= (1575 - (1281 + 293))) then
						else
							v54 = 4;
							break;
						end
						if (0 == v74) then
							v61 = nil;
							v62 = nil;
							v74 = 267 - (28 + 238);
						end
					end
				end
				if (v54 == 0) then
					local v75 = 0 - 0;
					while true do
						if ((1560 - (1381 + 178)) == v75) then
							v54 = 1 + 0;
							break;
						end
						if (0 ~= v75) then
						else
							v55 = 0 + 0;
							v56 = nil;
							v75 = 1;
						end
					end
				end
				if (v54 == (1 + 1)) then
					local v76 = 0;
					while true do
						if (v76 ~= (0 - 0)) then
						else
							v59 = nil;
							v60 = nil;
							v76 = 1 + 0;
						end
						if (v76 ~= 1) then
						else
							v54 = 3;
							break;
						end
					end
				end
				if (v54 ~= (471 - (381 + 89))) then
				else
					v57 = nil;
					v58 = nil;
					v54 = 2 + 0;
				end
			end
		end
		local function v29(v63, v64, v65)
			local v66 = 0;
			local v67;
			local v68;
			local v69;
			while true do
				if (v66 == 1) then
					v69 = v63[3];
					return function(...)
						local v84 = 1;
						local v85 = -1;
						local v86 = {...};
						local v87 = v12("#", ...) - 1;
						local function v88()
							local v90 = v67;
							local v91 = v68;
							local v92 = v69;
							local v93 = v27;
							local v94 = {};
							local v95 = {};
							local v96 = {};
							for v104 = 0 + 0, v87 do
								if ((1025 <= (4340 - 1806)) and (v104 >= v92)) then
									v94[v104 - v92] = v86[v104 + (1157 - (1074 + 82))];
								else
									v96[v104] = v86[v104 + (1 - 0)];
								end
							end
							local v97 = (v87 - v92) + (1785 - ((578 - 364) + (4073 - 2503)));
							local v98;
							local v99;
							while true do
								local v105 = 1455 - (990 + 465);
								while true do
									if ((v105 == (1 + 0)) or ((72 + 92) >= (2709 + 76))) then
										if ((v99 <= (137 - 102)) or ((2251 - (1668 + 58)) == (2735 - (512 + 114)))) then
											if (((85 - 52) == (67 - 34)) and (v99 <= (58 - (837 - (461 + 335))))) then
												if (((1421 + 1633) <= (752 + 3263)) and (v99 <= (7 + 1))) then
													if (((6310 - 4439) < (5376 - (109 + 1885))) and (v99 <= ((189 + 1283) - (1269 + 200)))) then
														if ((1293 <= (4151 - 1985)) and (v99 <= (816 - (98 + 717)))) then
															if ((v99 == (1761 - (1730 + 31))) or ((3405 - (802 + 24)) < (211 - 88))) then
																if ((v98[2 - 0] == v98[(1668 - (728 + 939)) + 3]) or ((651 + 195) >= (389 + 1979))) then
																	v84 = v84 + 1;
																else
																	v84 = v98[1 + 2];
																end
															else
																local v128 = 0 - (0 - 0);
																local v129;
																local v130;
																local v131;
																local v132;
																while true do
																	if ((v128 == 2) or ((13378 - 9366) <= (1202 + 2156))) then
																		while true do
																			if (((609 + 885) <= (2479 + 526)) and ((1 + 0) == v129)) then
																				v132 = nil;
																				while true do
																					if ((v130 == (0 + 0)) or ((4544 - ((1616 - 819) + 636)) == (10361 - 8227))) then
																						local v360 = 1619 - ((3269 - 1842) + 192);
																						while true do
																							if ((((1884 - (138 + 930)) + 1539) == (5467 - 3112)) and (v360 == (1 + 0))) then
																								v130 = 1 + 0;
																								break;
																							end
																							if ((v360 == (326 - (192 + 123 + 11))) or ((1864 - (316 + 960)) <= (241 + 191))) then
																								v131 = v98[2];
																								v132 = v96[v131];
																								v360 = 1 + 0;
																							end
																						end
																					end
																					if (((4434 + 363) >= ((11641 + 3249) - 10995)) and (v130 == (552 - (83 + 468)))) then
																						for v378 = v131 + 1, v85 do
																							v7(v132, v96[v378]);
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if ((((4614 + 769) - (1202 + 604)) == (16698 - (53576 - 40455))) and (v129 == (0 - 0))) then
																				v130 = 0 - 0;
																				v131 = nil;
																				v129 = 326 - (45 + 280);
																			end
																		end
																		break;
																	end
																	if ((3794 > 3693) and (v128 == 1)) then
																		v131 = nil;
																		v132 = nil;
																		v128 = 2;
																	end
																	if ((v128 == (0 + 0)) or (1275 == (3583 + (2283 - (459 + 1307))))) then
																		v129 = 0 + 0;
																		v130 = nil;
																		v128 = 1;
																	end
																end
															end
														elseif ((v99 > (2 + 0)) or ((280 + 1311) >= (6629 - 3049))) then
															local v133 = 1911 - ((2210 - (474 + 1396)) + (2743 - 1172));
															local v134;
															local v135;
															local v136;
															local v137;
															while true do
																if (((388 + 595) <= (3580 - (1733 + 39))) and ((0 - 0) == v133)) then
																	local v287 = 0;
																	while true do
																		if ((v287 == 1) or ((3184 - (125 + 909)) <= (3145 - (1096 + 852)))) then
																			v133 = 1;
																			break;
																		end
																		if ((3769 >= (494 + 33 + 646)) and ((0 - 0) == v287)) then
																			v134 = 0;
																			v135 = nil;
																			v287 = 1;
																		end
																	end
																end
																if (((1441 + 44) == (1997 - (409 + 103))) and (v133 == ((1 + 237) - (46 + 190)))) then
																	while true do
																		if ((v134 == (95 - (51 + 44))) or ((935 + 2380) <= (4099 - (1114 + (581 - 378))))) then
																			local v310 = 726 - (228 + 498);
																			while true do
																				if ((v310 == (1 + 0)) or (876 >= (1638 + 1326))) then
																					v134 = 1;
																					break;
																				end
																				if ((v310 == (663 - (174 + 489))) or (2232 > 2497)) then
																					local v361 = 0;
																					while true do
																						if ((v361 == (0 - 0)) or ((4015 - (830 + 137 + 938)) <= ((2857 - 2001) - (303 + 221)))) then
																							v135 = v98[2];
																							v136 = {v96[v135](v13(v96, v135 + (4 - 3) + 0, v85))};
																							v361 = 1163 - ((762 - (562 + 29)) + 991);
																						end
																						if (((15190 - 11504) > 3172) and (v361 == ((2 + 0) - 1))) then
																							v310 = 2 - 1;
																							break;
																						end
																					end
																				end
																			end
																		end
																		if ((v134 == (1 + 0)) or (4474 < (2874 - 2054))) then
																			v137 = 0 - 0;
																			for v333 = v135, v98[4] do
																				local v334 = 0 - (1419 - (374 + 1045));
																				local v335;
																				while true do
																					if (((13227 - 8948) >= (4130 - (111 + 1137))) and (v334 == (158 - (91 + 67)))) then
																						v335 = 0 - 0;
																						while true do
																							if ((v335 == (0 + 0)) or ((2552 - (423 + 100)) >= 3521)) then
																								v137 = v137 + 1 + 0;
																								v96[v333] = v136[v137];
																								break;
																							end
																						end
																						break;
																					end
																				end
																			end
																			break;
																		end
																	end
																	break;
																end
																if ((v133 == (2 - 1)) or ((1062 + 975) >= 4642)) then
																	v136 = nil;
																	v137 = nil;
																	v133 = 773 - (326 + 445);
																end
															end
														else
															local v138 = 0 + 0;
															local v139;
															local v140;
															local v141;
															local v142;
															local v143;
															while true do
																if ((1720 < (19454 - 14996)) and (v138 == (2 - 1))) then
																	v141 = nil;
																	v142 = nil;
																	v138 = 2;
																end
																if ((2 == v138) or (436 > 3021)) then
																	v143 = nil;
																	while true do
																		if (((1663 - 950) <= 847) and (v139 == (713 - ((1645 - 1115) + 181)))) then
																			while true do
																				if (((2792 - (448 + 190)) <= ((1586 + 3326) - (614 + 267))) and (v140 == 0)) then
																					local v362 = 0 + 0;
																					while true do
																						if (((4647 - (19 + 9 + 4)) == (7510 - 2895)) and (v362 == ((0 - 0) - 0))) then
																							local v403 = 0 - 0;
																							while true do
																								if ((v403 == 0) or ((985 + 2805) == ((2730 - 1851) - 379))) then
																									v141 = v98[3 - 1];
																									v142 = v96[v141];
																									v403 = 1813 - (1293 + 519);
																								end
																								if (((181 - 92) < (576 - 355)) and (v403 == (1 - 0))) then
																									v362 = 4 - 3;
																									break;
																								end
																							end
																						end
																						if ((2054 >= (3347 - 1926)) and (v362 == (1 + 0))) then
																							v140 = 1 + 0;
																							break;
																						end
																					end
																				end
																				if (((1607 - 915) < ((2201 - (1307 + 187)) + 2351)) and ((1 + 0) == v140)) then
																					v143 = v96[v141 + 2 + 0];
																					if ((v143 > (1096 - (709 + 387))) or ((5112 - (673 + 1185)) == (4799 - 3144))) then
																						if ((v142 > v96[v141 + (3 - 2)]) or ((5139 - 3843) == (8078 - 3168))) then
																							v84 = v98[(6 - 3) + 0];
																						else
																							v96[v141 + 3 + 0] = v142;
																						end
																					elseif ((3368 == 3368) and (v142 < v96[v141 + 1])) then
																						v84 = v98[3];
																					else
																						v96[v141 + (3 - (0 - 0))] = v142;
																					end
																					break;
																				end
																			end
																			break;
																		end
																		if (((3326 - (232 + 451)) < (895 + 42 + 2878)) and (v139 == (1 - 0))) then
																			v142 = nil;
																			v143 = nil;
																			v139 = 3 - 1;
																		end
																		if ((1913 > 493) and ((1880 - (446 + 1434)) == v139)) then
																			local v311 = 1283 - (1040 + 243);
																			while true do
																				if ((4755 > (10231 - 6803)) and (v311 == 1)) then
																					v139 = 1848 - (559 + 1288);
																					break;
																				end
																				if (((3312 - (609 + 1322)) <= (2823 - (12 + 1 + 441))) and (v311 == (0 - 0))) then
																					v140 = 0;
																					v141 = nil;
																					v311 = 2 - (565 - (510 + 54));
																				end
																			end
																		end
																	end
																	break;
																end
																if ((v138 == 0) or ((24120 - 19277) == 4084)) then
																	v139 = 0 + 0;
																	v140 = nil;
																	v138 = 1;
																end
															end
														end
													elseif (((16956 - 12287) > (129 + 234)) and (v99 <= (3 + 2))) then
														if ((v99 == 4) or ((5570 - 3693) >= 3138)) then
															local v144 = 0 + 0;
															local v145;
															local v146;
															local v147;
															while true do
																if (((8721 - 3979) >= (2398 + 1228)) and (v144 == (0 + 0))) then
																	local v288 = 0 + 0;
																	while true do
																		if ((v288 == (1 + 0)) or ((4442 + 98) == (1349 - (153 + 280)))) then
																			v144 = 2 - 1;
																			break;
																		end
																		if ((v288 == (0 + 0)) or ((457 + 699) > (2274 + 2071))) then
																			v145 = v98[2 + 0];
																			v146 = v96[v145 + 2 + 0];
																			v288 = 1 - 0;
																		end
																	end
																end
																if (((1383 + 854) < (4916 - (89 + (1164 - 586)))) and (v144 == 1)) then
																	local v289 = 0;
																	while true do
																		if ((v289 == 0) or ((1917 + (802 - (13 + 23))) < (47 - 24))) then
																			v147 = v96[v145] + v146;
																			v96[v145] = v147;
																			v289 = 1;
																		end
																		if (((1746 - ((1114 - 542) + (685 - 208))) <= (112 + 714)) and (v289 == ((1 - 0) + 0))) then
																			v144 = 2;
																			break;
																		end
																	end
																end
																if (((132 + 973) <= 1176) and (v144 == (88 - (84 + 2)))) then
																	if (((5568 - (3277 - (830 + 258))) <= (2747 + 1065)) and (v146 > (842 - (497 + 345)))) then
																		if ((v147 <= v96[v145 + 1 + 0]) or (788 >= (274 + 1342))) then
																			local v336 = 0;
																			local v337;
																			local v338;
																			while true do
																				if (((3187 - (605 + 728)) <= (2411 + 968)) and (v336 == (1 - 0))) then
																					while true do
																						if (((209 + 4340) == 4549) and ((0 - 0) == v337)) then
																							v338 = 0;
																							while true do
																								if ((v338 == ((0 - 0) + 0)) or ((8372 - 5350) >= 3024)) then
																									v84 = v98[3 + 0];
																									v96[v145 + (492 - (457 + 32))] = v147;
																									break;
																								end
																							end
																							break;
																						end
																					end
																					break;
																				end
																				if (((2046 + 2774) > 2198) and (v336 == (1402 - (832 + 570)))) then
																					v337 = 0 + 0 + 0;
																					v338 = nil;
																					v336 = 1;
																				end
																			end
																		end
																	elseif ((v147 >= v96[v145 + 1 + 0]) or (1061 >= (17308 - 12417))) then
																		local v339 = 0 + 0;
																		while true do
																			if (((2160 - (588 + 208)) <= (12055 - 7582)) and (0 == v339)) then
																				v84 = v98[1803 - (884 + 916)];
																				v96[v145 + (6 - 3)] = v147;
																				break;
																			end
																		end
																	end
																	break;
																end
															end
														else
															v96[v98[2 + 0]] = {};
														end
													elseif ((v99 <= ((561 + 98) - ((1673 - (860 + 581)) + 421))) or ((5484 - (1569 + 320)) <= (1 + 2))) then
														v96[v98[2]] = v96[v98[1 + 2]] + v96[v98[13 - 9]];
													elseif ((v99 == (612 - (316 + (1065 - 776)))) or (4672 == (10083 - 6231))) then
														do
															return;
														end
													else
														local v219 = 0;
														local v220;
														local v221;
														local v222;
														while true do
															if (((72 + 1487) == (3012 - (666 + 787))) and ((426 - (360 + 65)) == v219)) then
																v222 = 0 + 0;
																for v315 = v220, v98[(205 + 53) - (79 + (416 - (237 + 4)))] do
																	local v316 = 0 - 0;
																	local v317;
																	while true do
																		if ((0 == v316) or ((1368 + 384) <= (2415 - 1627))) then
																			v317 = 0;
																			while true do
																				if ((v317 == (0 - 0)) or ((4806 - (503 + 396)) == (358 - (92 + 89)))) then
																					v222 = v222 + (1 - 0);
																					v96[v315] = v221[v222];
																					break;
																				end
																			end
																			break;
																		end
																	end
																end
																break;
															end
															if ((3470 > 555) and ((0 + 0) == v219)) then
																v220 = v98[2 + 0];
																v221 = {v96[v220](v13(v96, v220 + 1, v98[3]))};
																v219 = 1 + 0;
															end
														end
													end
												elseif ((v99 <= 12) or ((2216 - 1244) == (563 + 82))) then
													if ((((3572 - 2052) + 1662) >= (6441 - 4326)) and (v99 <= (2 + (19 - 11)))) then
														if (((5936 - 2043) < (5673 - (485 + 759))) and (v99 == 9)) then
															v96[v98[4 - 2]] = v96[v98[3]] + v98[1193 - (442 + 747)];
														else
															v96[v98[1137 - (832 + 303)]][v98[949 - (88 + 858)]] = v96[v98[2 + 2]];
														end
													elseif ((v99 > 11) or ((2373 + (936 - 442)) < (79 + 1826))) then
														if ((v96[v98[791 - (627 + 139 + 23)]] ~= v96[v98[3 + 1]]) or ((8866 - 7070) >= 4051)) then
															v84 = v84 + (1 - 0);
														else
															v84 = v98[7 - 4];
														end
													else
														v96[v98[2]] = v96[v98[10 - (26 - 19)]][v96[v98[1077 - (1036 + 16 + 21)]]];
													end
												elseif (((1148 + 471) <= (2044 + 1712)) and (v99 <= 14)) then
													if (((1175 - 571) == (476 + 128)) and (v99 > ((2919 - (85 + 1341)) - (641 + 839)))) then
														local v155 = 913 - (910 + (4 - 1));
														local v156;
														local v157;
														local v158;
														while true do
															if ((v155 == (0 - (0 - 0))) or (((6540 - (45 + 327)) - (1466 + 218)) == (414 + 486))) then
																v156 = 0;
																v157 = nil;
																v155 = 1149 - (556 + 592);
															end
															if (((1 + (0 - 0)) == v155) or ((5267 - (329 + 479)) <= ((2469 - (444 + 58)) - (76 + 98 + 680)))) then
																v158 = nil;
																while true do
																	if (((12480 - 8848) > (7042 - 3644)) and (v156 == (1 + 0))) then
																		while true do
																			if (((4821 - (396 + 343)) <= 4917) and (v157 == (1 + 0 + 0))) then
																				for v381 = v158, v85 do
																					local v382 = 1477 - (29 + 1448);
																					local v383;
																					local v384;
																					local v385;
																					while true do
																						if (((2363 + 2469) >= (2775 - (135 + 1254))) and (v382 == (0 - 0))) then
																							v383 = 0 - 0;
																							v384 = nil;
																							v382 = 1 + 0;
																						end
																						if (((1664 - (389 + 1138)) == 137) and (v382 == (575 - (102 + 472)))) then
																							v385 = nil;
																							while true do
																								if ((v383 == (1 + 0)) or ((871 + 699) >= 4332)) then
																									while true do
																										if ((v384 == (0 + 0)) or ((5609 - (320 + 1225)) <= (5271 - 3452))) then
																											v385 = v94[v381 - v158];
																											v96[v381] = v385;
																											break;
																										end
																									end
																									break;
																								end
																								if ((v383 == (0 - 0)) or ((3051 + 1935) < (3038 - (157 + 1307)))) then
																									local v444 = 1859 - (821 + 1038);
																									while true do
																										if (((11042 - 6616) > (19 + 153)) and (v444 == 0)) then
																											v384 = 0 - 0;
																											v385 = nil;
																											v444 = 1 + 0;
																										end
																										if (((1452 - 866) > (1481 - ((2566 - (64 + 1668)) + 192))) and (v444 == (1 + 0))) then
																											v383 = 1 + 0;
																											break;
																										end
																									end
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																			if (((18 + 808) == 826) and (v157 == (0 - 0))) then
																				local v364 = 304 - (300 + 4);
																				local v365;
																				while true do
																					if ((v364 == (0 + 0)) or ((10520 - 6501) > (4803 - (112 + 250)))) then
																						v365 = 0;
																						while true do
																							if (((805 + 1212) < 4261) and (v365 == (2 - 1))) then
																								v157 = (1974 - (1227 + 746)) + 0;
																								break;
																							end
																							if ((4716 > (42 + 38)) and (v365 == (0 + 0))) then
																								v158 = v98[2];
																								v85 = (v158 + v97) - (1 + 0);
																								v365 = 1 + 0;
																							end
																						end
																						break;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if ((v156 == 0) or ((4921 - (1001 + 413)) == ((22425 - 15129) - 4024))) then
																		local v318 = (1636 - 754) - (244 + (1132 - (415 + 79)));
																		while true do
																			if ((v318 == (694 - (627 + 66))) or ((2610 - 1734) >= (3677 - (512 + 90)))) then
																				v156 = 1907 - (1665 + 241);
																				break;
																			end
																			if (((5069 - (373 + 344)) > (1152 + 1402)) and (v318 == (0 + 0))) then
																				v157 = 0 - 0;
																				v158 = nil;
																				v318 = 1 - 0;
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														v96[v98[1101 - (35 + 1064)]] = #v96[v98[3 + 0 + 0]];
													end
												elseif ((v99 <= 15) or ((9426 - 5020) < (17 + 4026))) then
													v96[v98[1238 - (298 + 938)]] = v96[v98[1262 - (233 + 1026)]] - v98[4];
												elseif ((v99 > (1682 - (636 + 1030))) or (((1457 - (142 + 349)) + 923) >= 3383)) then
													v96[v98[2 + 0]] = v96[v98[1 + 2]] / v98[1 + 3];
												else
													local v225 = 221 - (55 + 166);
													local v226;
													local v227;
													local v228;
													while true do
														if (((367 + 1525) <= (275 + 2459)) and ((0 - 0) == v225)) then
															v226 = (128 + 169) - ((48 - 12) + 261);
															v227 = nil;
															v225 = 1 - 0;
														end
														if (((3291 - (34 + 1334)) < (853 + 1365)) and (v225 == (1 + 0))) then
															v228 = nil;
															while true do
																if ((2173 > ((826 + 836) - (1035 + 248))) and (1 == v226)) then
																	while true do
																		if ((v227 == 0) or ((2612 - (20 + 1)) == (1777 + 1632))) then
																			v228 = v98[321 - (95 + 39 + 185)];
																			do
																				return v13(v96, v228, v85);
																			end
																			break;
																		end
																	end
																	break;
																end
																if (((5647 - (549 + 584)) > (4009 - (314 + 371))) and (v226 == (0 - 0))) then
																	local v343 = 968 - (478 + 490);
																	while true do
																		if (((1 + 0) == v343) or (208 >= (6000 - (786 + (1050 - 664))))) then
																			v226 = 3 - (1866 - (1710 + 154));
																			break;
																		end
																		if (((1379 - ((1373 - (200 + 118)) + 324)) == v343) or ((2923 - (1093 + 247)) > (3170 + 397))) then
																			v227 = 0 + 0;
																			v228 = nil;
																			v343 = 3 - 2;
																		end
																	end
																end
															end
															break;
														end
													end
												end
											elseif ((v99 <= 26) or ((4455 - 3142) == (2258 - 1464))) then
												if (((7975 - 4801) > (1033 + 1869)) and (v99 <= 21)) then
													if (((15872 - (4657 + 7095)) <= (14683 - 10423)) and (v99 <= (15 + 4))) then
														if ((v99 == (45 - 27)) or (883 > (5466 - ((635 - 271) + 324)))) then
															if (not v96[v98[2]] or (((14717 - 4794) - (5601 + 702)) >= 4891)) then
																v84 = v84 + (2 - 1);
															else
																v84 = v98[1 + 0 + 2];
															end
														else
															local v161 = 0;
															local v162;
															local v163;
															local v164;
															local v165;
															while true do
																if (((17816 - 13558) > (1499 - 562)) and (v161 == (0 - 0))) then
																	v162 = 1268 - (1249 + 19);
																	v163 = nil;
																	v161 = 1 + 0;
																end
																if ((v161 == (3 - 2)) or ((5955 - (686 + 400)) < (711 + 195))) then
																	v164 = nil;
																	v165 = nil;
																	v161 = 2;
																end
																if ((v161 == (231 - (73 + 156))) or ((6 + 655 + 564) > (5039 - (721 + 90)))) then
																	while true do
																		if (((38 + 3290) > 2238) and ((0 - (0 + 0)) == v162)) then
																			local v319 = 470 - (224 + 246);
																			while true do
																				if (((6218 - 2379) > (2586 - (2558 - 1377))) and (v319 == (1 + (1250 - (363 + 887))))) then
																					v162 = 1 + (0 - 0);
																					break;
																				end
																				if ((v319 == (0 - 0)) or ((950 + 53 + 290) <= (1007 - 500))) then
																					v163 = v98[(13 - 7) - 4];
																					v164 = v96[v163];
																					v319 = 514 - (203 + 310);
																				end
																			end
																		end
																		if (((1994 - (1238 + 755)) == v162) or ((203 + 2693) < (2339 - (709 + 825)))) then
																			v165 = v98[4 - 1];
																			for v340 = 1 - 0, v165 do
																				v164[v340] = v96[v163 + v340];
																			end
																			break;
																		end
																	end
																	break;
																end
															end
														end
													elseif (((3180 - (196 + 457 + 211)) == ((10808 - (674 + 990)) - (1958 + 4870))) and (v99 == (41 - 21))) then
														if ((v98[835 - (70 + 101 + 662)] < v96[v98[4]]) or (((4220 - 1557) - (4 + 89)) == (5372 - 3839))) then
															v84 = v98[2 + 1];
														else
															v84 = v84 + (4 - (1058 - (507 + 548)));
														end
													else
														v96[v98[1 + 1]][v96[v98[1489 - (35 + (2288 - (289 + 548)))]]] = v96[v98[4]];
													end
												elseif ((v99 <= 23) or (((4154 - (821 + 997)) - ((283 - (195 + 60)) + 1425)) == (3453 - (941 + 1052)))) then
													if ((v99 == (22 + 0)) or ((6133 - (822 + 692)) <= 999)) then
														v96[v98[2 - (0 + 0)]] = v96[v98[2 + 1]] / v96[v98[4]];
													else
														v65[v98[300 - (45 + 252)]] = v96[v98[(1503 - (251 + 1250)) + 0]];
													end
												elseif ((v99 <= (9 + (43 - 28))) or ((8299 - 4889) > (4549 - (114 + 319)))) then
													if ((v98[2 - 0] ~= v96[v98[(3 + 1) - 0]]) or ((576 + 327) >= (4556 - 1497))) then
														v84 = v84 + (1 - 0);
													else
														v84 = v98[1966 - (556 + 1407)];
													end
												elseif ((v99 == (1231 - (741 + 465))) or (((5473 - (809 + 223)) - (170 + 295)) < 2857)) then
													local v232 = (0 - 0) + 0;
													local v233;
													local v234;
													local v235;
													while true do
														if (((4529 + 401) > (5679 - (10126 - 6754))) and (v232 == 0)) then
															v233 = 0 + 0;
															v234 = nil;
															v232 = 1 + 0;
														end
														if ((v232 == (3 - 2)) or ((2292 + 1754) < (2521 - (957 + 273)))) then
															v235 = nil;
															while true do
																if ((v233 == 0) or ((1135 + 3106) == (1046 + 374 + 2125))) then
																	v234 = (0 + 0) - 0;
																	v235 = nil;
																	v233 = 1;
																end
																if ((v233 == (2 - 1)) or (((12981 - (14 + 603)) - 8316) > (20955 - 16723))) then
																	while true do
																		if ((v234 == 0) or (((3659 - (118 + 11)) - (389 + 1391)) >= (353 + 1826 + 1294))) then
																			v235 = v98[2];
																			v96[v235](v13(v96, v235 + 1 + 0, v85));
																			break;
																		end
																	end
																	break;
																end
															end
															break;
														end
													end
												else
													local v236 = 0 - 0;
													local v237;
													local v238;
													local v239;
													local v240;
													while true do
														if (((4117 - (783 + 140 + 28)) == (10625 - 7459)) and (v236 == (1 + 0))) then
															local v302 = 0;
															while true do
																if ((1763 < (4035 - (309 + 2))) and (v302 == (2 - 1))) then
																	v236 = 1214 - (1090 + 122);
																	break;
																end
																if (((19 + 38) <= (9144 - 6421)) and (v302 == (0 + 0))) then
																	v85 = (v239 + v237) - (2 - 1);
																	v240 = 1118 - (628 + 490);
																	v302 = 1;
																end
															end
														end
														if ((v236 == ((950 - (551 + 398)) + 1)) or ((5125 - 3055) == 443)) then
															for v321 = v237, v85 do
																local v322 = 0 - 0;
																local v323;
																while true do
																	if ((v322 == (774 - (431 + 343))) or (2705 == (2813 - 1420))) then
																		v323 = 0 - 0;
																		while true do
																			if ((v323 == (0 + 0)) or (4601 < 61)) then
																				v240 = v240 + 1 + 0 + 0;
																				v96[v321] = v238[v240];
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if ((v236 == (1695 - (556 + 1139))) or (1390 >= (4759 - (6 + 9)))) then
															local v303 = 0 + 0;
															while true do
																if ((v303 == (1 + 0)) or ((2172 - (28 + 51 + 90)) > (3116 + 718))) then
																	v236 = 1 + 0;
																	break;
																end
																if ((v303 == (0 - 0)) or ((111 + 45) > 3913)) then
																	v237 = v98[2];
																	v238, v239 = v93(v96[v237](v13(v96, v237 + (1318 - (486 + 831)), v85)));
																	v303 = 1;
																end
															end
														end
													end
												end
											elseif ((195 == (507 - 312)) and (v99 <= (105 - 75))) then
												if (((587 + 2518) >= (5678 - 3882)) and (v99 <= ((4801 - 3510) - (668 + 595)))) then
													if ((((9080 - 5139) + 438) >= (430 + 1701)) and (v99 == (73 - 46))) then
														if (((4134 - (23 + 267)) >= (3987 - (1129 + 265 + 550))) and (v98[2] == v96[v98[391 - (371 + 16)]])) then
															v84 = v84 + 1;
														else
															v84 = v98[(6959 - 5206) - (1326 + 424)];
														end
													else
														v96[v98[1 + 1]][v96[v98[5 - 2]]] = v98[14 - 10];
													end
												elseif ((v99 > (147 - (88 + 30))) or (((4092 - (40 + 49)) - (720 + 51)) <= (6075 - 3344))) then
													v96[v98[1778 - (421 + 1355)]] = v98[4 - 1] ^ v96[v98[4]];
												elseif (((2410 + (9501 - 7006)) == (5988 - (286 + 797))) and (v96[v98[7 - 5]] ~= v98[6 - 2])) then
													v84 = v84 + ((930 - (99 + 391)) - (397 + 42));
												else
													v84 = v98[1 + 2];
												end
											elseif ((v99 <= 32) or ((4936 - (24 + 776)) >= (6795 - (1972 + 412)))) then
												if ((v99 == (816 - (222 + 563))) or (((28648 - 22131) - (8813 - 5254)) == (2893 + 1124))) then
													local v174 = 190 - (23 + 167);
													local v175;
													local v176;
													while true do
														if (((3026 - (690 + 1108)) >= 813) and (v174 == (0 + 0))) then
															v175 = 0 + 0;
															v176 = nil;
															v174 = 1;
														end
														if ((v174 == (849 - (40 + 808))) or ((569 + 2886) > (15487 - 11437))) then
															while true do
																if (((233 + 10) == (129 + 114)) and (v175 == (0 + 0))) then
																	v176 = v98[573 - (47 + 524)];
																	v96[v176](v96[v176 + 1]);
																	break;
																end
															end
															break;
														end
													end
												else
													v96[v98[2]] = v98[2 + 0 + 1];
												end
											elseif ((v99 <= ((236 - 146) - 57)) or ((404 - (1737 - (1032 + 572))) > (3584 - 2012))) then
												if (((4465 - (1165 + 561)) < (98 + 3195)) and (v96[v98[6 - 4]] == v98[2 + 2])) then
													v84 = v84 + (480 - (341 + 138));
												else
													v84 = v98[1 + 2];
												end
											elseif ((v99 > (69 - 35)) or (3942 < (1551 - (203 + 214)))) then
												if ((v96[v98[328 - (89 + 237)]] <= v96[v98[4]]) or (2693 == (15997 - (12841 - (568 + 1249))))) then
													v84 = v84 + (1 - 0);
												else
													v84 = v98[884 - (581 + 300)];
												end
											else
												local v244 = 0;
												local v245;
												local v246;
												local v247;
												while true do
													if ((2146 == (3366 - (855 + 365))) and (v244 == 0)) then
														v245 = 0 - 0;
														v246 = nil;
														v244 = 1 + 0;
													end
													if ((v244 == 1) or ((3479 - (1030 + 161 + 44)) == (3027 + 197))) then
														v247 = nil;
														while true do
															if ((v245 == (0 + 0)) or ((5190 - (156 + 130)) <= 1916)) then
																v246 = v98[4 - (4 - 2)];
																v247 = v96[v246];
																v245 = 1 - 0;
															end
															if ((90 <= (2181 - (4310 - 3194))) and (v245 == (1 + 0))) then
																for v368 = v246 + 1, v98[2 + 1] do
																	v7(v247, v96[v368]);
																end
																break;
															end
														end
														break;
													end
												end
											end
										elseif (((4871 - (10 + 59)) == 4802) and (v99 <= (15 + 38))) then
											if ((v99 <= (216 - 172)) or (2280 <= (1674 - (671 + 492)))) then
												if ((v99 <= 39) or ((1335 + 341) <= (1678 - (369 + 846)))) then
													if (((1025 + 2844) == (3302 + 567)) and (v99 <= 37)) then
														if ((1158 <= (4558 - (1036 + 909))) and (v99 > (29 + 7))) then
															local v179 = 0 - 0;
															while true do
																if (((203 - (11 + (1498 - (913 + 393)))) == v179) or ((1195 + 1169) <= (2174 - (135 + 40)))) then
																	v96[v98[4 - 2]] = v98[2 + 1] ~= ((0 - 0) - 0);
																	v84 = v84 + (1 - 0);
																	break;
																end
															end
														elseif ((v96[v98[2]] > v98[180 - ((70 - 20) + 126)]) or ((13705 - 8783) < (43 + 151))) then
															v84 = v84 + 1;
														else
															v84 = v98[1416 - (1233 + (590 - (269 + 141)))];
														end
													elseif ((v99 == (1007 - (522 + (993 - 546)))) or ((3512 - ((2088 - (362 + 1619)) + 1314)) < (15 + (1641 - (950 + 675))))) then
														local v180 = 0;
														local v181;
														local v182;
														local v183;
														while true do
															if ((v180 == (2 - 1)) or ((1033 + 1397) >= (9674 - 4802))) then
																v183 = nil;
																while true do
																	if ((v181 == (0 - 0)) or ((6680 - (716 + 1194)) < (30 + 1705))) then
																		local v325 = 0 + 0;
																		while true do
																			if ((v325 == (503 - (74 + 166 + 263))) or ((8562 - 4123) <= 2350)) then
																				v182 = 0;
																				v183 = nil;
																				v325 = 1;
																			end
																			if ((v325 == (1180 - (216 + 963))) or ((2220 + 2259) < (10222 - 5756))) then
																				v181 = 1 + (1287 - (485 + 802));
																				break;
																			end
																		end
																	end
																	if ((((8411 - (432 + 127)) - 5305) > 1225) and (v181 == ((1075 - (1065 + 8)) - 1))) then
																		while true do
																			if (((5104 - (279 + 154)) > (3452 - (454 + 180 + 144))) and (v182 == (0 + 0))) then
																				v183 = v98[19 - (12 + 5)];
																				do
																					return v13(v96, v183, v183 + v98[2 + 1]);
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
																break;
															end
															if ((v180 == (0 - 0)) or ((1366 + (3931 - (635 + 966))) < (4420 - (200 + 77 + 816)))) then
																v181 = 0 - 0;
																v182 = nil;
																v180 = 1184 - (1058 + 125);
															end
														end
													elseif ((v98[2] < v98[4]) or ((852 + 3690) == (3945 - (815 + (202 - (5 + 37)))))) then
														v84 = v84 + (4 - 3);
													else
														v84 = v98[3];
													end
												elseif ((((1484 - 887) - 345) <= (472 + 1505)) and (v99 <= (119 - 78))) then
													if ((v99 > (1938 - (41 + 1857))) or (((1386 + 1943) - (1222 + 671)) == (9756 - 5981))) then
														if ((v96[v98[2]] <= v98[5 - 1]) or (1618 < (2112 - (229 + 953)))) then
															v84 = v84 + ((2809 - 1034) - (1111 + 663));
														else
															v84 = v98[3];
														end
													else
														v96[v98[1581 - (874 + 705)]] = v96[v98[1 + 2]][v98[3 + 1]];
													end
												elseif (((9817 - 5094) > (117 + 4036)) and (v99 <= (721 - (642 + 37)))) then
													v96[v98[2]] = v96[v98[1 + 0 + 2]] % v96[v98[1 + 3]];
												elseif ((v99 > 43) or ((9173 - 5519) >= (9670 - 5016))) then
													v96[v98[456 - (233 + 221)]] = v96[v98[3]] % v98[8 - 4];
												else
													v96[v98[2 + 0]] = v29(v91[v98[1544 - (718 + (3120 - 2297))]], nil, v65);
												end
											elseif (((599 + 352) <= 1496) and (v99 <= ((1608 - 755) - (266 + 539)))) then
												if ((v99 <= (129 - 83)) or ((2961 - (636 + 589)) == 571)) then
													if ((v99 == (106 - 61)) or ((1847 - 951) > 4769)) then
														local v187 = 0 + (0 - 0);
														local v188;
														local v189;
														local v190;
														while true do
															if ((v187 == (1 + 0)) or ((2060 - (657 + 358)) <= (734 + 286))) then
																v190 = nil;
																while true do
																	if (((0 - 0) == v188) or (1160 <= 328)) then
																		local v326 = 0;
																		while true do
																			if (((8675 - 4867) > ((4640 - (318 + 211)) - (1151 + 36))) and (v326 == (0 + (0 - 0)))) then
																				v189 = 0 + 0;
																				v190 = nil;
																				v326 = 1;
																			end
																			if ((3891 < (14690 - 9771)) and (v326 == (1833 - ((3139 - (963 + 624)) + 280)))) then
																				v188 = 835 - (64 + 770);
																				break;
																			end
																		end
																	end
																	if ((v188 == (1 + 0)) or (2234 <= (3409 - 1907))) then
																		while true do
																			if (((0 + 0) == v189) or ((3755 - (157 + 1086)) < 432)) then
																				v190 = v96[v98[7 - (2 + 1)]];
																				if (not v190 or ((8093 - 6245) == (1326 - 461))) then
																					v84 = v84 + (1 - 0);
																				else
																					local v389 = (1665 - (518 + 328)) - ((1395 - 796) + 220);
																					local v390;
																					while true do
																						if ((v389 == (0 - 0)) or ((9323 - 4641) <= 4541)) then
																							v390 = 1931 - ((2130 - (301 + 16)) + 118);
																							while true do
																								if ((0 == v390) or ((2212 + 814) >= (5263 - (841 + 376)))) then
																									v96[v98[2 - 0]] = v190;
																									v84 = v98[3];
																									break;
																								end
																							end
																							break;
																						end
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
																break;
															end
															if (((467 + 1541) > (1741 - 1103)) and (v187 == ((2517 - 1658) - (464 + 395)))) then
																v188 = 0;
																v189 = nil;
																v187 = 2 - 1;
															end
														end
													else
														v84 = v98[2 + 1];
													end
												elseif (((2612 - (467 + 370)) <= ((18760 - 12080) - 3447)) and (v99 > 47)) then
													if ((v98[2 + 0] <= v98[13 - 9]) or ((709 + 3834) == (4645 - 2648))) then
														v84 = v84 + (521 - (150 + 370));
													else
														v84 = v98[3];
													end
												elseif (v96[v98[2]] or (((11439 - 7055) - (74 + 1208)) < (1790 - 1062))) then
													v84 = v84 + (4 - 3);
												else
													v84 = v98[3 + 0];
												end
											elseif ((((666 + 69) - (14 + 376)) == (598 - 253)) and (v99 <= (33 + 17))) then
												if ((v99 > (44 + 5)) or ((2697 + 130) < (1107 - 729))) then
													local v192 = 0 + 0;
													local v193;
													while true do
														if ((v192 == (78 - (23 + 32 + 23))) or ((8237 - 4761) < (1733 + 864))) then
															v193 = v98[2 + 0];
															do
																return v96[v193](v13(v96, v193 + (1 - 0), v98[(1 - 0) + 2]));
															end
															break;
														end
													end
												else
													local v194 = 901 - (652 + 249);
													local v195;
													local v196;
													while true do
														if ((3079 < (12829 - 8035)) and (v194 == (1868 - (708 + 1160)))) then
															v195 = v98[5 - 3];
															v196 = {};
															v194 = 1 - (0 + 0);
														end
														if (((4881 - (10 + 17)) > (1003 + 330 + 3131)) and (((5509 - 3776) - (1400 + 332)) == v194)) then
															for v296 = 1 - 0, #v95 do
																local v297 = 1908 - (242 + 538 + 1128);
																local v298;
																local v299;
																local v300;
																while true do
																	if ((v297 == (1 + (1019 - (829 + 190)))) or ((1801 + 3111) == ((11427 - 8224) + 555))) then
																		v300 = nil;
																		while true do
																			if (((1066 - (850 + 90)) <= ((7715 - 1617) - 2616)) and (v298 == 1)) then
																				while true do
																					if ((v299 == ((1921 - 531) - (360 + 1030))) or (2374 == (3871 + 503))) then
																						v300 = v95[v296];
																						for v427 = 0, #v300 do
																							local v428 = 0 - 0;
																							local v429;
																							local v430;
																							local v431;
																							while true do
																								if ((1575 == (2166 - 591)) and (1 == v428)) then
																									v431 = v429[1663 - (909 + 752)];
																									if (((v430 == v96) and (v431 >= v195)) or ((3457 - ((270 - 161) + 1114)) == (2663 - 1208))) then
																										local v478 = 0 + 0 + 0;
																										while true do
																											if ((v478 == (242 - (6 + 236))) or ((673 + 394) > (1432 + 347))) then
																												v196[v431] = v430[v431];
																												v429[2 - 1] = v196;
																												break;
																											end
																										end
																									end
																									break;
																								end
																								if ((2161 >= (1630 - 696)) and (v428 == (1133 - (1076 + 57)))) then
																									v429 = v300[v427];
																									v430 = v429[1 + 0];
																									v428 = 690 - (579 + 110);
																								end
																							end
																						end
																						break;
																					end
																				end
																				break;
																			end
																			if (((128 + 1484) == (1426 + 186)) and (v298 == (0 + 0))) then
																				local v386 = 407 - (57 + 117 + 233);
																				while true do
																					if (((12156 - 7804) >= (4971 - 2138)) and (v386 == (1 + 0))) then
																						v298 = 1175 - (663 + 511);
																						break;
																					end
																					if ((v386 == (0 + 0)) or (3222 < 3073)) then
																						v299 = 0;
																						v300 = nil;
																						v386 = 1;
																					end
																				end
																			end
																		end
																		break;
																	end
																	if ((744 <= 2942) and (v297 == (0 + 0))) then
																		v298 = 0;
																		v299 = nil;
																		v297 = 2 - (2 - 1);
																	end
																end
															end
															break;
														end
													end
												end
											elseif ((v99 <= 51) or ((1110 + 723) <= 1322)) then
												if ((v98[4 - 2] < v96[v98[4 + 0]]) or (3467 <= (2553 - 1498))) then
													v84 = v84 + 1 + 0;
												else
													v84 = v98[5 - 2];
												end
											elseif (((2524 + 1017) == 3541) and (v99 > ((618 - (520 + 93)) + 47))) then
												local v256 = 722 - ((754 - (259 + 17)) + 15 + 229);
												local v257;
												local v258;
												local v259;
												while true do
													if ((v256 == (517 - (440 + 77))) or (3557 >= (1821 + 2182))) then
														v257 = 0 - 0;
														v258 = nil;
														v256 = 1557 - (655 + 901);
													end
													if ((v256 == (1 + 0 + 0)) or (((1702 - 1199) + 154) >= (1127 + 541))) then
														v259 = nil;
														while true do
															if ((((591 - (396 + 195)) - 0) == v257) or ((2472 - (695 + 750)) > 3858)) then
																local v347 = 0 - 0;
																local v348;
																while true do
																	if ((v347 == (0 - 0)) or (3654 < ((5248 - 3439) - 1359))) then
																		v348 = 351 - (285 + 66);
																		while true do
																			if (((4407 - 2516) < ((7524 - (440 + 1321)) - (682 + 628))) and ((0 + 0) == v348)) then
																				v258 = v98[302 - (176 + (1952 - (1059 + 770)))];
																				v259 = v96[v258];
																				v348 = 1;
																			end
																			if ((v348 == (1 + 0)) or (3140 < (1545 + 584))) then
																				v257 = 270 - (239 + 30);
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															if (((1 + 0) == v257) or (2555 < (1192 + 48))) then
																for v371 = v258 + 1, v98[4] do
																	v259 = v259 .. v96[v371];
																end
																v96[v98[3 - 1]] = v259;
																break;
															end
														end
														break;
													end
												end
											else
												local v260 = 0 - 0;
												local v261;
												local v262;
												local v263;
												local v264;
												while true do
													if ((v260 == (315 - (306 + 9))) or ((16495 - (54416 - 42648)) <= 4722)) then
														v261 = v98[1 + 1];
														v262, v263 = v93(v96[v261](v96[v261 + 1 + 0]));
														v260 = 1;
													end
													if (((357 + 383) < (14117 - 9180)) and (1 == v260)) then
														v85 = (v263 + v261) - 1;
														v264 = 0;
														v260 = 1377 - (1140 + 235);
													end
													if ((3658 >= ((724 - (424 + 121)) + 101)) and (v260 == (2 + 0))) then
														for v327 = v261, v85 do
															local v328 = 0 + 0 + 0;
															local v329;
															while true do
																if ((0 == v328) or ((937 - (33 + 19)) >= 1031)) then
																	v329 = 0 + 0;
																	while true do
																		if (((10652 - 7098) >= 525) and (v329 == ((1347 - (641 + 706)) + 0))) then
																			v264 = v264 + (1 - 0);
																			v96[v327] = v262[v264];
																			break;
																		end
																	end
																	break;
																end
															end
														end
														break;
													end
												end
											end
										elseif (((2264 + 150) <= ((1450 + 2211) - (586 + (543 - (249 + 191))))) and (v99 <= 62)) then
											if ((((1402 - 1080) + 3207) <= (10892 - (3285 + 4069))) and (v99 <= (1545 - (1309 + 179)))) then
												if ((v99 <= (99 - 44)) or ((1246 + 1615) < ((4736 - 3507) - (1198 - (183 + 244))))) then
													if (((1297 + 21 + 399) <= (9614 - 5089)) and (v99 > (107 - 53))) then
														v96[v98[2]] = v96[v98[612 - (295 + 314)]] * v96[v98[9 - 5]];
													else
														v96[v98[(2694 - (434 + 296)) - (1300 + 662)]] = v98[9 - (18 - 12)] / v98[(2271 - (169 + 343)) - (1178 + 577)];
													end
												elseif ((v99 > (30 + 26)) or (((8236 + 1158) - 6216) <= 1524)) then
													v96[v98[1407 - (851 + 554)]] = v96[v98[3]] * v98[(6 - 2) + 0];
												else
													v96[v98[(14 - 9) - (3 + 0)]] = v98[6 - 3] ~= (302 - (115 + 187));
												end
											elseif (((3258 + 996) > (351 + 19)) and (v99 <= (232 - 173))) then
												if ((v99 > (1219 - (160 + 1001))) or (((4058 - 2627) + (1327 - (651 + 472))) == (1227 + 550))) then
													for v216 = v98[2], v98[5 - 2] do
														v96[v216] = nil;
													end
												else
													v96[v98[360 - (237 + 121)]] = v65[v98[(681 + 219) - (525 + 161 + 211)]];
												end
											elseif ((v99 <= ((137 - 24) - 53)) or (3338 >= (13119 - 9126))) then
												v96[v98[144 - (96 + 46)]] = v64[v98[780 - (643 + 134)]];
											elseif (((417 + 737) <= (3536 - 2061)) and (v99 > (226 - 165))) then
												local v265 = 0;
												local v266;
												local v267;
												local v268;
												while true do
													if ((v265 == (1 + 0)) or ((5122 - 2512) < ((2997 - (397 + 86)) - 1284))) then
														v268 = nil;
														while true do
															if ((v266 == (720 - (316 + 403))) or ((963 + (1361 - (423 + 453))) == 3083)) then
																while true do
																	if (((8630 - 5491) > (332 + 584)) and (v267 == ((0 + 0) - 0))) then
																		v268 = v98[1 + 1 + 0];
																		v96[v268] = v96[v268](v13(v96, v268 + 1 + 0, v85));
																		break;
																	end
																end
																break;
															end
															if (((10235 - 7281) == (14107 - 11153)) and (v266 == 0)) then
																local v350 = 0;
																while true do
																	if (((242 - 125) <= (166 + 2726)) and (v350 == (1 - 0))) then
																		v266 = 1 + 0 + 0;
																		break;
																	end
																	if ((v350 == (0 - 0)) or ((470 - (12 + 4 + 1)) > (18107 - 13445))) then
																		v267 = 0 - (0 + 0);
																		v268 = nil;
																		v350 = 1 - 0;
																	end
																end
															end
														end
														break;
													end
													if (((3273 - 1953) > (121 + 474)) and (v265 == 0)) then
														v266 = (3163 - (50 + 1140)) - (1656 + 317);
														v267 = nil;
														v265 = 1;
													end
												end
											else
												local v269 = 0 + 0 + 0;
												local v270;
												while true do
													if (((0 + 0) == v269) or (3199 < (1568 - 978))) then
														v270 = v98[9 - 7];
														do
															return v96[v270](v13(v96, v270 + 1, v85));
														end
														break;
													end
												end
											end
										elseif ((v99 <= (421 - (5 + 349))) or ((22765 - (10612 + 7360)) < (1301 - (266 + 1005)))) then
											if ((v99 <= (4 + 60)) or (1696 <= 1059)) then
												if (((1544 + 799) == (7994 - 5651)) and (v99 == (82 - 19))) then
													v64[v98[3]] = v96[v98[2]];
												else
													local v207 = 1696 - (561 + 1135);
													local v208;
													local v209;
													while true do
														if ((v207 == (0 - 0)) or ((3428 - 2385) > 3591)) then
															local v293 = (1530 - 464) - (507 + 559);
															while true do
																if ((v293 == (2 - 1)) or ((8937 - 6047) >= (4467 - (212 + 176)))) then
																	v207 = 1;
																	break;
																end
																if ((4474 <= (5675 - (250 + 655))) and (v293 == (0 - 0))) then
																	v208 = 0 - 0;
																	v209 = nil;
																	v293 = 1 + 0;
																end
															end
														end
														if ((v207 == ((597 - (157 + 439)) - 0)) or (4942 == (5859 - (1869 + 87)))) then
															while true do
																if ((v208 == (0 - 0)) or ((2149 - (484 + 1417)) > (10384 - 5539))) then
																	v209 = v98[2];
																	v96[v209] = v96[v209](v13(v96, v209 + 1, v98[4 - 1]));
																	break;
																end
															end
															break;
														end
													end
												end
											elseif (((2342 - (48 + 725)) == (2562 - 993)) and (v99 <= ((302 - 128) - 109))) then
												local v210 = 0;
												local v211;
												local v212;
												local v213;
												while true do
													if ((v210 == (0 + 0)) or ((13166 - (27376 - 19137)) <= (902 + 2319))) then
														v211 = 0 + 0;
														v212 = nil;
														v210 = 854 - (152 + 701);
													end
													if ((v210 == (1312 - (430 + 881))) or (((2016 - 1334) + 1098) > (3682 - (557 + 338)))) then
														v213 = nil;
														while true do
															if ((v211 == ((918 - (782 + 136)) + 0)) or (3937 <= (3466 - 2236))) then
																local v332 = 0;
																while true do
																	if ((v332 == 1) or ((9234 - 6597) < (4532 - 2826))) then
																		v211 = 2 - (856 - (112 + 743));
																		break;
																	end
																	if ((v332 == (801 - (499 + 302))) or (2669 <= (3275 - (39 + (1998 - (1026 + 145)))))) then
																		v212 = 0 - (0 + 0);
																		v213 = nil;
																		v332 = 1;
																	end
																end
															end
															if ((v211 == (2 - 1)) or ((5564 - 4163) > (7209 - 2513))) then
																while true do
																	if ((v212 == (0 + 0)) or (3280 < ((4584 - (493 + 225)) - (9354 - 6809)))) then
																		v213 = v98[2];
																		v96[v213] = v96[v213]();
																		break;
																	end
																end
																break;
															end
														end
														break;
													end
												end
											elseif (((789 + 2518 + 1620) >= (3644 - 1341)) and (v99 > (170 - ((275 - 172) + 1)))) then
												local v271 = 0;
												local v272;
												local v273;
												local v274;
												local v275;
												local v276;
												while true do
													if ((3462 >= (1586 - (475 + 2 + 77))) and (v271 == (2 - 1))) then
														v274 = nil;
														v275 = nil;
														v271 = 6 - 4;
													end
													if ((v271 == 0) or (1077 >= (260 + 1751))) then
														v272 = 0 + 0;
														v273 = nil;
														v271 = 1504 - (1395 + 108);
													end
													if ((((12831 - 8341) - 2947) < (3619 - (7 + 1197))) and (v271 == (1 + 0 + (1 - 0)))) then
														v276 = nil;
														while true do
															if ((v272 == (0 + (1595 - (210 + 1385)))) or ((4763 - (27 + 292)) < (5904 - 3889))) then
																local v351 = 0;
																while true do
																	if (((0 - 0) == v351) or ((17613 - 13413) == (4598 - 2266))) then
																		v273 = 0 - 0;
																		v274 = nil;
																		v351 = 140 - (43 + 96);
																	end
																	if ((v351 == (4 - 3)) or ((2889 - 1611) >= (1092 + 224))) then
																		v272 = 1;
																		break;
																	end
																end
															end
															if ((((1995 - (1201 + 488)) + 776) == (2138 - 1056)) and (v272 == (1 + 0))) then
																local v352 = 0;
																while true do
																	if ((((1542 + 946) - 1160) <= (1536 + 3342)) and (1 == v352)) then
																		v272 = 1 + 1;
																		break;
																	end
																	if ((4087 >= (3106 - (1414 + (598 - 261)))) and (((3479 - 1539) - ((2227 - (352 + 233)) + 298)) == v352)) then
																		v275 = nil;
																		v276 = nil;
																		v352 = 2 - 1;
																	end
																end
															end
															if (((5 - 3) == v272) or ((1750 - 1160) > (1531 + 3119))) then
																while true do
																	if ((v273 == 1) or ((2937 + 837) <= (4639 - (357 + 615)))) then
																		local v393 = 0 + (0 - 0);
																		local v394;
																		while true do
																			if (((3116 - 1846) < (1839 + 307)) and (v393 == (0 - 0))) then
																				v394 = 0 + 0;
																				while true do
																					if (((311 + 4252) >= (36 + 20)) and (v394 == (1302 - (384 + 917)))) then
																						v273 = 699 - (128 + 310 + 259);
																						break;
																					end
																					if ((v394 == (1543 - (1407 + 136))) or ((1268 - 822) == (2509 - (687 + 1200)))) then
																						v276 = {};
																						v275 = v10({}, {__index=function(v453, v454)
																							local v455 = 1710 - ((1130 - (489 + 85)) + (2655 - (277 + 1224)));
																							local v456;
																							local v457;
																							local v458;
																							while true do
																								if (((7278 - 5209) > (1104 - (9 + 86))) and (v455 == ((1914 - (663 + 830)) - (275 + 146)))) then
																									v456 = 0;
																									v457 = nil;
																									v455 = 1 + 0;
																								end
																								if (((2 + 10) < (4272 - (29 + 35))) and (v455 == 1)) then
																									v458 = nil;
																									while true do
																										if ((v456 == ((0 - 0) - (875 - (461 + 414)))) or ((8930 - 5940) <= (13155 - 10175))) then
																											local v485 = 0;
																											while true do
																												if (((0 + 0) == v485) or ((3587 - (53 + 959)) >= (717 + 3558))) then
																													v457 = 408 - (312 + 96);
																													v458 = nil;
																													v485 = 1 - 0;
																												end
																												if ((v485 == (286 - (59 + 88 + 138))) or ((4525 - (813 + 86)) <= 1306)) then
																													v456 = 1 + 0;
																													break;
																												end
																											end
																										end
																										if (((2534 - 1166) < ((407 + 3865) - (18 + 474))) and ((1 + 0) == v456)) then
																											while true do
																												if ((v457 == (0 - 0)) or ((4255 - (860 + 226)) == (2576 - (121 + 180 + 2)))) then
																													local v490 = 0;
																													while true do
																														if (((306 + 2175) <= (3529 - (172 + 78))) and (v490 == ((1999 - 759) - (988 + 252)))) then
																															local v496 = 0 + 0;
																															while true do
																																if ((v496 == (0 + 0)) or ((3033 - (49 + 1921)) <= ((651 + 1116) - (223 + 667)))) then
																																	v458 = v276[v454];
																																	return v458[53 - ((73 - 22) + 1)][v458[2 - 0]];
																																end
																															end
																														end
																													end
																												end
																											end
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end,__newindex=function(v459, v460, v461)
																							local v462 = 0 - 0;
																							local v463;
																							while true do
																								if (((3439 - (146 + 979)) == (654 + 1660)) and (v462 == 0)) then
																									v463 = v276[v460];
																									v463[1][v463[607 - (311 + 294)]] = v461;
																									break;
																								end
																							end
																						end});
																						v394 = 2 - 1;
																					end
																				end
																				break;
																			end
																		end
																	end
																	if (((392 + 532) >= (1920 - (496 + 947))) and ((1358 - (1233 + 125)) == v273)) then
																		local v395 = 0;
																		local v396;
																		while true do
																			if (((201 + 535 + 1077) <= (3390 + 388)) and (v395 == 0)) then
																				v396 = 0 + 0;
																				while true do
																					if (((789 + 3361) == ((9709 - 3914) - (963 + 682))) and (v396 == (1 + (0 - 0)))) then
																						v273 = 1505 - (504 + 252 + 748);
																						break;
																					end
																					if ((432 <= 3007) and (v396 == (0 + 0))) then
																						v274 = v91[v98[3 + 0]];
																						v275 = nil;
																						v396 = 1 + 0 + 0;
																					end
																				end
																				break;
																			end
																		end
																	end
																	if ((2 == v273) or (408 > 2721)) then
																		for v410 = 1 - 0, v98[4 + 0] do
																			local v411 = 0;
																			local v412;
																			while true do
																				if ((v411 == (1 + 0)) or ((1217 + 2201) < 2497)) then
																					if (((6906 - 5171) < (2351 - ((363 - 207) + 26))) and (v412[1 + 0] == (107 - 38))) then
																						v276[v410 - (165 - (46 + 103 + 15))] = {v96,v412[3]};
																					else
																						v276[v410 - (483 - (14 + 268 + 200))] = {v64,v412[2 + 1]};
																					end
																					v95[#v95 + 1 + 0] = v276;
																					break;
																				end
																				if (((677 + 3213) >= (693 + 2569)) and (v411 == 0)) then
																					local v439 = 0 + 0;
																					while true do
																						if ((v439 == (0 + 0)) or ((8337 - 3981) >= (4595 + 54))) then
																							v84 = v84 + (3 - 2);
																							v412 = v90[v84];
																							v439 = 1 + 0;
																						end
																						if (((3955 - (12 + 39)) == (3633 + 271)) and (v439 == (2 - 1))) then
																							v411 = 3 - 2;
																							break;
																						end
																					end
																				end
																			end
																		end
																		v96[v98[1 + (214 - (199 + 14))]] = v29(v274, v275, v65);
																		break;
																	end
																end
																break;
															end
														end
														break;
													end
												end
											else
												v96[v98[2 + 0]] = v96[v98[3]] - v96[v98[9 - 5]];
											end
										elseif ((v99 <= (46 + 23)) or ((13821 - (39238 - 28277)) >= (5338 - (647 + 902)))) then
											if ((v99 == (1778 - (1596 + 114))) or ((2834 - (5256 - 3508)) > (5162 - (164 + 549)))) then
												v96[v98[1440 - (1059 + 379)]]();
											else
												v96[v98[2 - 0]] = v96[v98[2 + 1]];
											end
										elseif ((4981 > (93 + 453)) and (v99 <= ((695 - (85 + 148)) - (145 + 247)))) then
											do
												return v96[v98[2 + 0]];
											end
										elseif ((v99 == (33 + 38)) or ((7014 - 4648) <= (2 + 6))) then
											if ((v96[v98[2]] > v96[v98[4 + 0]]) or (((5494 - (426 + 863)) - 1615) == ((16773 - 13189) - (254 + 466)))) then
												v84 = v84 + 1;
											else
												v84 = v84 + v98[563 - ((2198 - (873 + 781)) + 16)];
											end
										else
											local v278 = 0 - 0;
											local v279;
											local v280;
											local v281;
											local v282;
											local v283;
											while true do
												if ((v278 == (629 - (294 + 334))) or ((2877 - (236 + 17)) > (1789 + 2360))) then
													local v306 = 0 + 0;
													while true do
														if ((v306 == (0 - 0)) or (((16595 - 4201) - 9776) >= ((6252 - 3937) + 2180))) then
															v281 = nil;
															v282 = nil;
															v306 = 1;
														end
														if ((v306 == 1) or ((2047 + 438) >= 3131)) then
															v278 = 796 - (413 + 381);
															break;
														end
													end
												end
												if ((v278 == 0) or ((119 + 2685) <= (5922 - 3137))) then
													v279 = 0 - 0;
													v280 = nil;
													v278 = 1;
												end
												if ((v278 == (1972 - (582 + 1388))) or ((1894 + 2677) == 3415)) then
													v283 = nil;
													while true do
														if ((v279 == 0) or ((7566 - (11544 - 8419)) > ((4911 - 1484) + 1360))) then
															local v353 = (1080 - 716) - ((2273 - (414 + 1533)) + 38);
															while true do
																if (((5679 - 3759) == (2740 - 820)) and (v353 == (620 - (47 + 573)))) then
																	v280 = v98[1 + 1];
																	v281, v282 = v93(v96[v280](v13(v96, v280 + (4 - 3), v98[4 - 1])));
																	v353 = 1665 - (1269 + 395);
																end
																if ((v353 == (493 - (76 + 416))) or ((1090 - (319 + 124)) == (10233 - 5756))) then
																	v279 = 1008 - (564 + 443);
																	break;
																end
															end
														end
														if ((3819 == (10572 - (5856 + 897))) and (v279 == (459 - (337 + 121)))) then
															local v354 = 0 - 0;
															while true do
																if ((v354 == (0 - 0)) or ((3377 - (1261 + 650)) > 4360)) then
																	v85 = (v282 + v280) - 1;
																	v283 = (555 - (443 + 112)) + 0;
																	v354 = (1480 - (888 + 591)) - 0;
																end
																if ((v354 == (1818 - (772 + 1045))) or ((2 + 12) > 994)) then
																	v279 = 146 - (102 + 42);
																	break;
																end
															end
														end
														if ((401 <= (2578 - (1524 + 320))) and (v279 == (1272 - (1049 + 221)))) then
															for v374 = v280, v85 do
																local v375 = 156 - (18 + 138);
																local v376;
																local v377;
																while true do
																	if ((v375 == (0 - 0)) or (2167 >= (4528 - (67 + 1035)))) then
																		v376 = 348 - (136 + 212);
																		v377 = nil;
																		v375 = 4 - 3;
																	end
																	if (((613 + 151) < (3029 + 256)) and (v375 == ((4147 - 2542) - (240 + 78 + 1286)))) then
																		while true do
																			if ((2499 == (3581 - (1050 + 32))) and (v376 == (0 - 0))) then
																				v377 = 0 + 0;
																				while true do
																					if ((v377 == (1055 - ((1246 - 915) + 724))) or ((56 + 636) >= 4933)) then
																						v283 = v283 + (645 - (269 + 147 + 228));
																						v96[v374] = v281[v283];
																						break;
																					end
																				end
																				break;
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
													break;
												end
											end
										end
										v84 = v84 + (726 - (267 + 458));
										break;
									end
									if ((v105 == (0 + 0)) or ((6064 - 2910) <= (3078 - (667 + 74 + 77)))) then
										v98 = v90[v84];
										v99 = v98[1498 - (1410 + 87)];
										v105 = 1898 - (1504 + 393);
									end
								end
							end
						end
						A, B = v27(v11(v88));
						if not A[1] then
							local v106 = 0;
							local v107;
							while true do
								if (v106 == 0) then
									v107 = v63[4][v84] or "?";
									error("Script error at [" .. v107 .. "]:" .. A[2]);
									break;
								end
							end
						else
							return v13(A, 2, B);
						end
					end;
				end
				if (v66 == 0) then
					v67 = v63[1];
					v68 = v63[2];
					v66 = 1;
				end
			end
		end
		return v29(v28(), {}, v17)(...);
	end
	vv9(), ...);
end
